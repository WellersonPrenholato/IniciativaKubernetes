# Deployment do MongoDb
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:4.4.6
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: mongouser
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: mongopwd

---
# Service do Mongodb
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  selector:
    app: mongodb
  ports:  
    - port: 27017
  type: ClusterIP

---
# Deployment da API que irá conectar com o deployment do MongoDb
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 5
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: wprenholato/rotten-potatoes:v1
          ports:
            - containerPort: 5000
          env:
            - name: MONGODB_DB
              value: "admin"
            - name: MONGODB_HOST
              value: "mongodb"
            - name: MONGODB_PORT
              value: "27017"
            - name: MONGODB_USERNAME
              value: "mongouser"
            - name: MONGODB_PASSWORD
              value: "mongopwd"

---
# Service da API
apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  selector:
    app: web
  ports:    
    - port: 80 # Porta padrão do protocolo HTTP
      targetPort: 5000 #Expondo a porta do container definida no deployment da API
      nodePort: 30000 #Porta do cluster
  # type: NodePort # Service NodePort só realiza deploy do cluster localmente, na minha máquina
  type: LoadBalancer # Service LoadBalancer indica que será realizado o deploy do cluster através do serviço da nuvem
